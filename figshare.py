import arcpy
from collections import OrderedDict
import os
import pandas as pd

arcpy.env.overwriteOutput = True

#Folder structure
rootdir = os.path.dirname(os.path.abspath(__file__)).split('\\src')[0]
datadir = os.path.join(rootdir, 'data')
resdir = os.path.join(rootdir, 'results')
gdb = os.path.join(resdir,'flood_risk.gdb')
tfinal = os.path.join(gdb, 'tracts_floodfinal')

#Output vars
figdir = os.path.join(resdir, 'figshare')
figgdb = os.path.join(figdir, 'wa_floodinequities.gdb')
tfig = os.path.join(figgdb, 'tracts_wa_floodinequities')

#Create summary of field names and types
def metafield(in_features, outab):
    fdict = OrderedDict()
    for f in arcpy.ListFields(in_features):
        fdict[f.name] = f.type
    fdf = pd.DataFrame.from_dict(fdict, orient='index').reset_index()
    fdf.columns = ['fname', 'ftype']
    pd.DataFrame.to_csv(fdf, outab)

if not os.path.exists(figdir):
    os.mkdir(figdir)

if not arcpy.Exists(figgdb):
    arcpy.CreateFileGDB_management(figdir, os.path.split(figgdb)[1])

#Select and format fields to include in final file
fdict = OrderedDict()
fdict['GEOID10'] = 'GEOID10'
fdict['SUM_POP10'] = 'totalpop'
fdict['SUM_floodpop'] = 'floodpop'
fdict['SUM_FEMApop'] = 'femapop'
fdict['rentalunits_perc'] = 'rentp'
fdict['lastpred_perc'] = 'pmo'
fdict['SUM_BISG_floodpop'] = 'popfloodmo'

rdict = OrderedDict()
rdict['white_'] = 'whi_'
rdict['black_'] = 'bla_'
rdict['hisp_'] = 'his_'
rdict['asi_'] = 'api_'
rdict['oth_'] = 'imu_'

pdict = OrderedDict()
pdict['BISG_per'] = 'p'
pdict['BISG_floodper'] = 'floodp'
pdict['BISG_FEMAper'] = 'femap'
pdict['BISG_floodratio'] = 'floodr'
pdict['BIST_FEMAratio'] = 'femar'

for (k1, v1) in rdict.iteritems():
    for (k2, v2) in pdict.iteritems():
        fdict['{0}{1}'.format(k1, k2)] = '{0}{1}'.format(v1, v2)

#Create field mapping
forigl = [f.name for f in arcpy.ListFields(tfinal)]

fms = arcpy.FieldMappings()
for fsel in fdict:
    if fsel in forigl:
        print("{0} : {1}".format(fsel, fdict[fsel]))
        fm = arcpy.FieldMap()
        fm.addInputField(tfinal, fsel)
        of = fm.outputField
        of.name = fdict[fsel]
        of.aliasName = fdict[fsel]
        fm.outputField = of
        fms.addFieldMap(fm)

#Export final file
arcpy.FeatureClassToFeatureClass_conversion(
    in_features = tfinal,
    out_path = figgdb,
    out_name= os.path.split(tfig)[1],
    field_mapping = fms
)

arcpy.CopyFeatures_management(tfig, os.path.join(figdir, 'tracts_wa_floodinequities.shp'))

#Get metadata
metafield(tfig, os.path.join(figdir, 'tmetatemplate.csv'))





import arcpy
import os
from collections import defaultdict

arcpy.CheckOutExtension("Spatial")
arcpy.env.overwriteOutput = True
arcpy.env.qualifiedFieldNames = False

#Folder structure
rootdir = 'C:/Mathis/ICSL/flood_vulnerability'
datadir = os.path.join(rootdir, 'data')
resdir = os.path.join(rootdir, 'results')
gdb_vulne = os.path.join(resdir,'flood_vulnerability.gdb')

gdb = os.path.join(resdir,'flood_risk.gdb')
if arcpy.Exists(gdb):
    print('Geodatabase already exists')
else:
    arcpy.CreateFileGDB_management(resdir, 'flood_risk.gdb')
arcpy.env.workspace = gdb

FEMAdraftgdb = os.path.join(datadir, 'FEMAdraft_20180920/FEMAdraft.gdb')

#Input data variables
FEMAdata = os.path.join(datadir, 'FEMA_20180819/NFHL_53_20180620/NFHL_53_20180620.gdb') #FEMA geodatabase
FEMAfloodhaz =  os.path.join(FEMAdata, 'S_Fld_Haz_Ar') #FEMA hazard data
snohopk = os.path.join(datadir, 'SnohomishFloodModel2018_WebMerc20180815.mpk')
buildings_raw = os.path.join(datadir, 'MicrosoftFootprints_20181012/Washington/Washington.geojson')
USadmin = 'C:\Mathis\ICSL\stormwater\data\USA_adm_gdb\USA_adm.gdb'
USstates = os.path.join(USadmin, 'USA_adm1')
censusblock2010 = os.path.join(datadir, 'TIGER2017\\tabblock2010_53_pophu\\tabblock2010_53_pophu.shp')

parcels_blocksfill = 'parcel_blocks_fill'

#Output variables
FEMAfloodhazproj = 'S_Fld_Haz_Ar_proj'
fathomsnoho = os.path.join(datadir, 'fathomsnoho\\v106\snohomishfloodmodel2018_fgdb.gdb')
floodhaz_1980 = os.path.join(fathomsnoho, 'Snoh_100_yr_1980s_Historical_binFT')
floodhaz_2050_low50 = os.path.join(fathomsnoho, 'Snoh_100_yr_2050s_RCP_4_5_Low_50th_binFT')
floodhaz_2050_high50 = os.path.join(fathomsnoho, 'Snoh_100_yr_2050s_RCP_8_5_High_50th_binFT')
flood80_parcel = 'floodhax1980_parcel_inters'
parcels_blocksfill_diss = 'parcel_blocks_fill_diss'
parcels_blocksfill_proj = 'parcel_blocks_fill_proj'
bg_proj = 'blockgroup2010_proj'
tracts_proj = 'tracts_WAproj'
floodbool = 'Snoh_100_yr_1980_bool'
parcels_flood_tab = 'parcel_blocks_fill_snohfloodcounttab'
parcels_flood = 'parcel_blocks_fill_snohflood'
buildings = 'buildings'

#-----------------------------------------------------------------------------------------------------------------------
# INTERSECT WITH FLOOD HAZARD
#-----------------------------------------------------------------------------------------------------------------------
#Extract snohomish flood hazard data from map package
if not arcpy.Exists(fathomsnoho):
    print('Create new directory: '+ fathomsnoho)
    os.mkdir(fathomsnoho)
    arcpy.ExtractPackage_management(snohopk, fathomsnoho)

#Dissolve parcel data prior to intersection with flood hazard data
arcpy.Dissolve_management(parcels_blocksfill, parcels_blocksfill_diss, dissolve_field= 'PolyID', multi_part= 'MULTI_PART')
#Project parcel data to same cs as flood hazard data
flood_cs = arcpy.Describe(floodhaz_1980).SpatialReference
arcpy.Project_management(parcels_blocksfill_diss, parcels_blocksfill_proj, flood_cs)
#arcpy.AddGeometryAttributes_management(parcels_blocksfill_proj, 'AREA_GEODESIC', Area_Unit='SQUARE_KILOMETERS')
#arcpy.AlterField_management(parcels_blocksfill_proj, 'POLYAREA', 'PARCELAREA', 'PARCELAREA')

#Subset raster to exclude 999 ++(permanent water features)
floodsa = arcpy.sa.Con(((arcpy.sa.Raster(floodhaz_1980)>0) & (arcpy.sa.Raster(floodhaz_1980)<999)), 1, 0)
floodsa.save(os.path.join(gdb, floodbool)) #Crashes with exit code -1073741819 (0xC0000005)so perform in ArcMap

#------- Method 1 - based on parcel intersection with flood zone -------------------------------------------------------
#Zonal statistics
arcpy.env.extent = floodbool
arcpy.env.snap = floodbool
arcpy.PolygonToRaster_conversion(parcels_blocksfill_diss, 'PolyID', parcels_blocksfill_diss + 'ras', 'MAXIMUM_AREA',
                                 cellsize = floodbool)
arcpy.sa.ZonalStatisticsAsTable(parcels_blocksfill_diss + 'ras', 'PolyID', floodbool, parcels_flood_tab, statistics_type='SUM')
#Join zonal statistics result and compute area intersecting with flood layer and area within 1/100 year flood zone
arcpy.MakeFeatureLayer_management(parcels_blocksfill_proj, 'pbplyr')
arcpy.AddJoin_management('pbplyr', 'PolyID', parcels_flood_tab, 'PolyID', join_type = 'KEEP_COMMON') #PolyID in 4th parameter likely not to work
arcpy.CopyFeatures_management('pbplyr', parcels_flood)
#Computer percentage area at risk of flood
arcpy.AddField_management(parcels_flood, 'snohoperarea', 'FLOAT')
arcpy.CalculateField_management(parcels_flood, 'snohoperarea', expression = '!SUM!/!COUNT!',
                                expression_type = 'PYTHON') #If PARCELAREA does not exist, compute
arcpy.MakeFeatureLayer_management(parcels_flood, )

#1a. less conservative categorical: if parcel intersects at all with flood zone, count in ---------------
#1b. medium categorical: if parcel intersects more than 50% with flood zone, count in -------------------
#1c. conservative categorical: if parcel entirely within flood zone, count in ---------------------------
#1d. less conservative continuous: population x percentage parcel area that intersects flood zone -------
#1e. conservative continuous: population x percentage parcel impervious area that intersects flood zone -

#------- Method 2 - based on building footprint intersection with flood zone -------------------------------------------
# I'm going to save my features to a list for merge later
items = []
for g in geojson["features"]:
    # Refer to AsShape docs
    # http://help.arcgis.com/en/arcgisdesktop/10.0/help/000v/000v00000153000000.htm
    # AsShape only creates a geometry object, so it's up to you
    # 	to use the AddField/Calculate field tools if you want to get the
    # 	attribute data across.
    geom = arcpy.AsShape(g["geometry"])
    # Save an id I'll use to calculate my field
    my_id = str(g["properties"]["ID_FIELD"])
    feature = "_" + str(my_id)
    # refer to the Copy Features docs
    # http://help.arcgis.com/en/arcgisdesktop/10.0/help/0017/001700000035000000.htm
    arcpy.CopyFeatures_management(geom, feature)
    # refer to the AddField docs
    # http://help.arcgis.com/en/arcgisdesktop/10.0/help/0017/001700000047000000.htm
    arcpy.AddField_management(feature, "ID_FIELD", "TEXT", 12, "", "", "ID_FIELD", "NULLABLE")
    # refer to the CalculateField docs
    # http://help.arcgis.com/en/arcgisdesktop/10.0/help/0017/00170000004m000000.htm
    try:
        arcpy.CalculateField_management(feature, "ID_FIELD", '"' + my_id + '"', "PYTHON")
    except Exception, e:
        print e
        arcpy.CalculateField_management(feature, "ID_FIELD, 0, "
        PYTHON
        ")
        # save my features to a list
        items.append(feature)
        del geom

        target = "all_features"
        # refer to Merge docs
        # http://help.arcgis.com/en/arcgisdesktop/10.0/help/0017/001700000055000000.htm
        arcpy.Merge_management(items, target)
        # then loop my list and
        # delete my individual features
        # http://help.arcgis.com/en/arcgisdesktop/10.0/help/0017/001700000052000000.htm
        # This only deleted them from my map project, not the file gdb
        for i in items:
            arcpy.Delete_management(i, "")
        del items

arcpy.JSONToFeatures_conversion(buildings_raw, buildings, geometry_type='POLYGON')

#-----------------------------------------------------------------------------------------------------------------------
# ANALYSIS OF FEMA DATA
#-----------------------------------------------------------------------------------------------------------------------
#Project FEMA
arcpy.Project_management(FEMAfloodhaz, FEMAfloodhazproj, out_coor_system=cs)
#Dissolve flood hazard data to get footprint
arcpy.Dissolve_management(FEMAfloodhazproj, 'FEMAfloodhaz_diss',multi_part='SINGLE_PART')

#Create separate layer only with Special Flood Hazard Area (100-year flood zone)
#From https://www.fema.gov/flood-zones (do not include coastal flooding 'V', 'VE', ['V'+str(n) for n in range(1,31)]
#all_codes = set([r[0] for r in arcpy.da.SearchCursor(floodhazproj, ['FLD_ZONE'])])
SFHA_codes = ['A', 'AO','AH', 'AE', 'A99', 'AR', 'AR/AE', 'AR/AO', 'AR/A1-A30', 'AR/A']+['A'+str(n) for n in range(1,31)]
SQLsel = "{0} IN ('{1}')".format('"FLD_ZONE"',"', '".join(map(str, SFHA_codes)) or 'NULL')
arcpy.MakeFeatureLayer_management(FEMAfloodhazproj, 'FEMAfloodhaz_lyr')
arcpy.SelectLayerByAttribute_management('FEMAfloodhaz_lyr', 'NEW_SELECTION',  SQLsel)
arcpy.CopyFeatures_management('FEMAfloodhaz_lyr', 'FEMAfloodhaz_SFHA')
#Create separate layer only with SFHA from detailed studies
arcpy.SelectLayerByAttribute_management('FEMAfloodhaz_lyr', 'SUBSET_SELECTION', "NOT FLD_ZONE='A'")
arcpy.CopyFeatures_management('FEMAfloodhaz_lyr', 'FEMAfloodhaz_SFHA_detailed')

#Assess percentage of washington state with FEMA data
arcpy.MakeFeatureLayer_management(USstates, 'WAborder', "{}='Washington'".format('"NAME_1"'))
arcpy.CopyFeatures_management('WAborder', 'WA')
arcpy.Project_management('WA', 'WA_proj', out_coor_system=cs)
arcpy.AddGeometryAttributes_management('WA_proj', 'AREA', Area_Unit='SQUARE_METERS')
arcpy.AlterField_management('WA_proj', 'POLY_AREA', 'WA_AREA', 'WA_AREA')
arcpy.Intersect_analysis(['WA_proj',FEMAfloodhazproj], 'WAFEMAflood_inters')
arcpy.AddGeometryAttributes_management('WAFEMAflood_inters', 'AREA', Area_Unit='SQUARE_METERS')
sum([row[0]/((10**6)*row[1]) for row in arcpy.da.SearchCursor('WAFEMAflood_inters', ['POLY_AREA','WA_AREA'])]) #FEMA flood hazard layers only cover 34% of WA

#Assess percentage of WA population living in area with FEMA data
arcpy.Project_management(censusblock2010, 'block2010_proj', out_coor_system=cs)
arcpy.AddGeometryAttributes_management('block2010_proj', 'AREA', Area_Unit='SQUARE_METERS')
arcpy.AlterField_management('block2010_proj', 'POLY_AREA', 'BLOCK_AREA', 'BLOCK_AREA')
arcpy.Intersect_analysis(['block2010_proj',FEMAfloodhazproj], 'blockFEMAflood_inters')
arcpy.AddGeometryAttributes_management('blockFEMAflood_inters', 'AREA', Area_Unit='SQUARE_METERS')
WApop = sum([row[0] for row in arcpy.da.SearchCursor(censusblock2010, ['POP10'])])
WApop_FEMA = sum([row[0]*row[1]/row[2] for row in arcpy.da.SearchCursor('blockFEMAflood_inters', ['POP10','POLY_AREA','BLOCK_AREA'])])
WApop_FEMA/WApop #49% of WA population lives in an area with a FEMA assessment